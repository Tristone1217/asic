!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CYCLES	sim_define.v	/^`define CYCLES 50$/;"	c
HOLD	sim_define.v	/^`define HOLD   4$/;"	c
INTV	sim_define.v	/^`define INTV   10$/;"	c
SIM_DEVINE_V	sim_define.v	/^`define SIM_DEVINE_V$/;"	c
VCD	sim_define.v	/^`define VCD$/;"	c
WIDTH	sim_define.v	/^`define WIDTH  4$/;"	c
aa	stimulus.v	/^    integer aa;$/;"	r
bit_grt	check.v	/^    integer bit_grt=0;$/;"	r
check	check.v	/^module check$/;"	m
clk	top.v	/^  reg  clk   = 1'b0; always  #10 clk   <= ~clk;$/;"	r
count_rising	stimulus.v	/^module count_rising$/;"	m
delayA	stimulus.v	/^    reg [31:0] delayA, delayB;$/;"	r
delayB	stimulus.v	/^    reg [31:0] delayA, delayB;$/;"	r
err_grt	check.v	/^    reg     err_grt=1'b0;$/;"	r
errors	check.v	/^    integer errors=0;$/;"	r
grt	top.v	/^  wire [WIDTH-1:0] #(1) grt, pre_grt;$/;"	n
id	top.v	/^  wire [BITW-1 :0] #(1) id , pre_id ;$/;"	n
idx	check.v	/^    integer idx;$/;"	r
idy	check.v	/^    integer idy;$/;"	r
idz	check.v	/^    integer idz;$/;"	r
integer	check.v	/^       input integer number;$/;"	p
integer	check.v	/^    function integer log2;$/;"	f
integer	top.v	/^      input integer number;$/;"	p
integer	top.v	/^   function integer log2;$/;"	f
num_grt	stimulus.v	/^    wire [31:0] num_grt[0:WIDTH-1];$/;"	n
num_req	stimulus.v	/^    wire [31:0] num_req[0:WIDTH-1];$/;"	n
pre_grt	top.v	/^  wire [WIDTH-1:0] #(1) grt, pre_grt;$/;"	n
pre_grt_dly	check.v	/^    reg  [WIDTH-1:0] pre_grt_dly;$/;"	r
pre_id	top.v	/^  wire [BITW-1 :0] #(1) id , pre_id ;$/;"	n
pre_id_dly	check.v	/^    reg  [BITW   :0] pre_id_dly;$/;"	r
pre_vld	top.v	/^  wire                  vld, pre_vld;$/;"	n
req	top.v	/^  wire [WIDTH-1:0] #(1) req;$/;"	n
req_dly	check.v	/^    reg [WIDTH-1:0] req_dly;$/;"	r
rst_n	top.v	/^  reg  rst_n = 1'b0; initial #23 rst_n <= 1'b1;$/;"	r
rst_n_dly	check.v	/^    reg              rst_n_dly;$/;"	r
stimulus	stimulus.v	/^module stimulus$/;"	m
stimulus_one	stimulus.v	/^module stimulus_one$/;"	m
top	top.v	/^module top;$/;"	m
valA	stimulus.v	/^    reg [31:0] valA, valB;$/;"	r
valB	stimulus.v	/^    reg [31:0] valA, valB;$/;"	r
vld	top.v	/^  wire                  vld, pre_vld;$/;"	n
wire	check.v	/^       input  wire             rst_n$/;"	p
wire	stimulus.v	/^       input   wire             rst_n$/;"	p
wire	stimulus.v	/^       input   wire  rst_n$/;"	p
wire	stimulus.v	/^       input  wire       rst_n$/;"	p
